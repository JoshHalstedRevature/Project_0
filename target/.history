compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
clear
exit
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
       // create a file writer
        var writer = new PrintWriter(new File("output.txt"))
       // read an int from standard input
       print("Enter the number of lines to read in: ")
       val x: Int = scala.io.StdIn.readLine.toInt
       // read in x number of lines from standard input
       var i=0
       while (i < x) {
           var str: String = scala.io.StdIn.readLine
           writer.write(str + "\n")
           i = i + 1
       }
       // close the writer
       writer.close
     }
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
clear
run
compile
run
compile
run
compile
run
compile
run
os.makeDir(os.pwd/"my_folder")
compile
run
compile
run
compile
run
taset:
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
evicted
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
compile
run
